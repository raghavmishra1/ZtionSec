# Generated by Django 5.2.7 on 2025-10-12 20:59

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('scanner', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvancedSecurityScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500)),
                ('domain', models.CharField(max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('scan_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('scan_duration', models.FloatField(blank=True, null=True)),
                ('security_score', models.IntegerField(default=0)),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], default='unknown', max_length=20)),
                ('dns_analysis', models.JSONField(blank=True, default=dict)),
                ('ssl_analysis', models.JSONField(blank=True, default=dict)),
                ('port_scan_results', models.JSONField(blank=True, default=dict)),
                ('webapp_scan_results', models.JSONField(blank=True, default=dict)),
                ('vulnerability_results', models.JSONField(blank=True, default=dict)),
                ('subdomain_results', models.JSONField(blank=True, default=dict)),
                ('technology_stack', models.JSONField(blank=True, default=dict)),
                ('security_headers', models.JSONField(blank=True, default=dict)),
                ('threat_intelligence', models.JSONField(blank=True, default=dict)),
                ('total_findings', models.IntegerField(default=0)),
                ('critical_findings', models.IntegerField(default=0)),
                ('high_findings', models.IntegerField(default=0)),
                ('medium_findings', models.IntegerField(default=0)),
                ('low_findings', models.IntegerField(default=0)),
                ('info_findings', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-scan_date'],
            },
        ),
        migrations.CreateModel(
            name='ScanConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('enable_port_scan', models.BooleanField(default=True)),
                ('enable_vulnerability_scan', models.BooleanField(default=True)),
                ('enable_webapp_scan', models.BooleanField(default=True)),
                ('enable_subdomain_enum', models.BooleanField(default=True)),
                ('enable_threat_intel', models.BooleanField(default=True)),
                ('port_scan_range', models.CharField(default='1-1000', max_length=100)),
                ('scan_timeout', models.IntegerField(default=300)),
                ('max_threads', models.IntegerField(default=10)),
                ('custom_wordlists', models.JSONField(blank=True, default=list)),
                ('excluded_checks', models.JSONField(blank=True, default=list)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_default', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='VulnerabilityDatabase',
            fields=[
                ('cve_id', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('cvss_score', models.FloatField()),
                ('severity', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('published_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('affected_products', models.JSONField(default=list)),
                ('references', models.JSONField(default=list)),
                ('cached_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-cvss_score', '-published_date'],
            },
        ),
        migrations.AddField(
            model_name='securityscan',
            name='advanced_scan_data',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='securityscan',
            name='risk_level',
            field=models.CharField(default='unknown', max_length=20),
        ),
        migrations.CreateModel(
            name='ScanReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('executive', 'Executive Summary'), ('technical', 'Technical Report'), ('compliance', 'Compliance Report'), ('comprehensive', 'Comprehensive Report')], max_length=20)),
                ('generated_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('report_data', models.JSONField(default=dict)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('scan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='scanner.advancedsecurityscan')),
            ],
            options={
                'ordering': ['-generated_date'],
            },
        ),
        migrations.CreateModel(
            name='SecurityFinding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('severity', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low'), ('info', 'Informational')], max_length=20)),
                ('category', models.CharField(choices=[('ssl_tls', 'SSL/TLS'), ('network', 'Network'), ('webapp', 'Web Application'), ('headers', 'Security Headers'), ('cms', 'CMS/Framework'), ('infrastructure', 'Infrastructure'), ('compliance', 'Compliance'), ('other', 'Other')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('recommendation', models.TextField()),
                ('cve_id', models.CharField(blank=True, max_length=20, null=True)),
                ('cvss_score', models.FloatField(blank=True, null=True)),
                ('affected_component', models.CharField(blank=True, max_length=200)),
                ('proof_of_concept', models.TextField(blank=True)),
                ('references', models.JSONField(blank=True, default=list)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('scan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='findings', to='scanner.advancedsecurityscan')),
            ],
            options={
                'ordering': ['-severity', '-cvss_score', '-created_date'],
            },
        ),
        migrations.CreateModel(
            name='ThreatIntelligence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_type', models.CharField(choices=[('ip', 'IP Address'), ('domain', 'Domain'), ('url', 'URL'), ('hash', 'File Hash')], max_length=20)),
                ('indicator_value', models.CharField(max_length=500)),
                ('threat_type', models.CharField(blank=True, max_length=100)),
                ('confidence_level', models.IntegerField(default=0)),
                ('first_seen', models.DateTimeField()),
                ('last_seen', models.DateTimeField()),
                ('source', models.CharField(max_length=100)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-last_seen'],
                'unique_together': {('indicator_type', 'indicator_value', 'source')},
            },
        ),
    ]
